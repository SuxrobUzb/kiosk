// main.js - –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ JavaScript –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const SERVER_URL = "{{ SERVER_URL }}"; // –≠—Ç–æ—Ç —à–∞–±–ª–æ–Ω –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω Flask'–æ–º
let translations = {};
let currentLang = localStorage.getItem('language') || 'uz_lat'; // –Ø–∑—ã–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

/**
 * –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞.
 * @param {string} lang - –ö–æ–¥ —è–∑—ã–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'uz_lat', 'ru', 'en').
 */
async function loadTranslations(lang) {
    try {
        const response = await fetch(`${SERVER_URL}/api/translations/${lang}`);
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        translations = await response.json();
    } catch (error) {
        console.error("Error loading translations:", error);
        // Fallback to default messages if translations fail to load
        translations = {
            error_fetch: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:',
            // ... –¥—Ä—É–≥–∏–µ –±–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–µ
        };
        showNotification(`${translations.error_fetch} ${error.message}`, 'danger');
    }
}

/**
 * –ü—Ä–∏–º–µ–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–¥—ã –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
 * —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ data-translate –∏ data-translate-placeholder.
 */
function applyTranslations() {
    document.querySelectorAll('[data-translate]').forEach(element => {
        const key = element.getAttribute('data-translate');
        if (translations[key]) {
            element.innerText = translations[key];
        }
    });
    document.querySelectorAll('[data-translate-placeholder]').forEach(element => {
        const key = element.getAttribute('data-translate-placeholder');
        if (translations[key]) {
            element.placeholder = translations[key];
        }
    });
}

/**
 * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º (—Å–≤–µ—Ç–ª–∞—è, —Ç–µ–º–Ω–∞—è, –¥–∞–ª—å—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è).
 * –û–∂–∏–¥–∞–µ—Ç, —á—Ç–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ —Å id="themeToggle".
 */
function setupThemeToggle() {
    const themeToggleBtn = document.getElementById('themeToggle');
    if (!themeToggleBtn) {
        console.warn("Theme toggle button with ID 'themeToggle' not found.");
        return;
    }

    const themes = ['light', 'dark', 'daltonic'];
    let currentThemeIndex = themes.indexOf(localStorage.getItem('theme') || 'light');
    if (currentThemeIndex === -1) currentThemeIndex = 0; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞

    const applyTheme = (theme) => {
        document.body.classList.remove(...themes); // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–ª–∞—Å—Å—ã —Ç–µ–º
        document.body.classList.add(theme);
        localStorage.setItem('theme', theme);
        themeToggleBtn.innerText = {
            'light': 'üåô',
            'dark': '‚òÄÔ∏è',
            'daltonic': 'üëÅÔ∏è'
        }[theme];
    };

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Ç–µ–º—É
    applyTheme(themes[currentThemeIndex]);

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    themeToggleBtn.addEventListener('click', () => {
        currentThemeIndex = (currentThemeIndex + 1) % themes.length;
        applyTheme(themes[currentThemeIndex]);
    });
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.
 * @param {string} message - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è.
 * @param {string} type - –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ('info' –∏–ª–∏ 'danger').
 */
function showNotification(message, type = 'info') {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä–æ–º–æ–∂–¥–∞—Ç—å
    const existing = document.querySelector(".notification");
    if (existing) existing.remove();

    const notification = document.createElement('div');
    notification.className = `notification ${type}`; // –ö–ª–∞—Å—Å—ã Tailwind CSS –¥–ª—è —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞
    notification.innerText = message;
    document.body.appendChild(notification);

    // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
 * @param {string} message - –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ.
 * @param {Function} onConfirm - –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏.
 */
function showModal(message, onConfirm) {
    const modal = document.createElement('div');
    modal.className = 'modal'; // –ö–ª–∞—Å—Å –¥–ª—è –∑–∞—Ç–µ–º–Ω–µ–Ω–∏—è —Ñ–æ–Ω–∞ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
    modal.innerHTML = `
        <div class="modal-content">
            <p>${message}</p>
            <div class="modal-buttons">
                <button id="confirmBtn" class="btn-primary" data-translate="confirm_button">${translations.confirm_button || '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'}</button>
                <button id="cancelBtn" class="btn-danger" data-translate="cancel_button">${translations.cancel_button || '–û—Ç–º–µ–Ω–∞'}</button>
            </div>
        </div>
    `;
    document.body.appendChild(modal);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    applyTranslations();

    document.getElementById('confirmBtn').onclick = () => {
        onConfirm();
        modal.remove(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    };
    document.getElementById('cancelBtn').onclick = () => {
        modal.remove(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ
    };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—â–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', async () => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –ø–µ—Ä–µ–¥ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º
    await loadTranslations(currentLang);
    applyTranslations();
    setupThemeToggle(); // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ main.js –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –º–æ–¥—É–ª—å
// export { loadTranslations, applyTranslations, setupThemeToggle, showNotification, showModal };
